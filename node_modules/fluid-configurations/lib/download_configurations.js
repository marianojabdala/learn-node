var async = require("async"),
  getOptions = require("./options_parser"),
  downloadS3Object = require("./download_s3_object"),
  path = require("path"),
  _ = require("lodash"),
  concurrency = parseInt(process.FLUID_S3_INDEXER_CONCURRENCY || 5, 10),

  downloadConfigurations,
  downloadIndexes,

  buildIndex = require("./index_builder");

downloadIndexes = function (options, callback) {
  var files = [];

  async.eachLimit(options.indexes, concurrency, function (indexEntry, callback) {
    downloadS3Object(indexEntry, _.defaults({
      local_dir: path.resolve(options.local_dir)
    }, options), function (err, file) {
      if (file) {
        files.push(file);
      }
      callback(err);
    });
  }, function (err) {
    callback(err, files, options.indexes);
  });
};

downloadConfigurations = function (options, callback) {

  options = getOptions(options);

  if (options.indexes) {
    downloadIndexes(options, callback);
  } else {
    buildIndex(options, function (err, indexes) {
      if (err) { return callback(err); }
      downloadIndexes(_.defaults({indexes: indexes}, options), callback);
    });
  }
};

module.exports = downloadConfigurations;

