/**
 * The preferences processor generates a small preferences
 * file that lives at the base path for a customer workflow.
 *
 * This file is used in order to determine if a customer
 * has published a new version of the configuration in order
 * to perform client side cache invalidation.
 *
 * It also includes other defaults as default locale that
 * are required to load other configurations when the locale
 * is not explicitly set.
 *
 * Generated file:
 *
 *  - customer/:id/preferences.json
 */
var processedPath = require("../processed_path"),
  getBaseProcessedDir = processedPath({}),
  mkdirp = require("mkdirp"),
  getJson = require("../get_json"),
  path = require("path"),
  async = require("async"),
  fs = require("fs"),
  queues = {};


// We don't want to write multiple times to the same file
// so we need to make sure calls follow an order
// At the same time we don't want to use blocking IO fs calls
// As that would slow things down for other customer configurations
function getQueueForPreferencesJson(options) {
  var preferences_path = options.preferences_path;

  if (queues[preferences_path]) {
    return queues[preferences_path];
  }

  queues[preferences_path] = async.queue(function (task, callback) {
    getJson(task.customer_path, function (err, customerSettings) {
      var defaultLocale = "en_us",
        data = {};

      if (err || !customerSettings) {
        return callback(new Error("Can't generate preferences.json. " +
          "Failed loading " + task.customer_path + " with error: " +
          (err && err.message)));
      }

      data = {
        version: (new Date()).getTime(),
        locales: {
          default: defaultLocale,
          available: [defaultLocale]
        }
      };

      try {
        data.locales = customerSettings.locale.availableLocales;
      } catch (e) {}

      setImmediate(function () {
        mkdirp(path.dirname(preferences_path), function () {
          fs.writeFile(preferences_path, JSON.stringify(data), callback);
        });
      });
    });
  }, 1);

  return queues[preferences_path];
}


// Include catalogId into customer/:id/catalogs.json
// and add catalog references for the products
// on customer/:id/products.json
function addDefaultLocaleToPreferences(options, callback) {
  var
  s3Object = options.s3Object,
    base_dir = getBaseProcessedDir(options.local_dir, s3Object),
    preferences_path = path.normalize(base_dir + "/preferences.json"),
    customer_path = path.normalize(base_dir + "/settings.json"),
    queue;

  queue = getQueueForPreferencesJson({
    preferences_path: preferences_path,
    s3Object: s3Object
  });

  queue.push({
    customer_path: customer_path
  }, function (err) {
    callback(err, {
      files: [preferences_path]
    });
  });

}

module.exports = function (options, callback) {
  if (options.s3Object.type === "customerConfig") {
    addDefaultLocaleToPreferences(options, callback);
  } else {
    return setImmediate(function () {
      callback();
    });
  }
};
