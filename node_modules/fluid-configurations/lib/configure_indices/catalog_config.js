/**
 * Gets the index information for a catalog configuration given its
 *
 * - environment
 * - workflow
 * - catalogId
 * - customerId
 *
 * Example:
 *
 *    getCatalogConfig({
 *      environment: "prod",
 *      customerId: 1475,
 *      workflow: "prod",
 *      catalogId: 7
 *    }, function (err, catalog) {
 *      if (err) {
 *        return console.log(err, err.stack, catalog);
 *      }
 *      console.log(JSON.stringify(catalog, null, 2));
 *    });
 *
 * Outputs:
 *
 *    {
 *       "AcceptRanges": "bytes",
 *      "ContentEncoding": "gzip",
 *      "ContentLength": "205704",
 *      "ContentType": "application/javascript; charset=UTF-8",
 *      "ETag": "73fb7989ffdad9edee061ae7efe4a6ae",
 *      "LastModified": "Mon, 14 Apr 2014 16:05:33 GMT",
 *      "Metadata": {},
 *      "VersionId": "HFMvl8Os.BeW9nWnhRM4a0mnLAJFq4Dn",
 *      "environment": "prod",
 *      "customerId": 1475,
 *      "workflow": "prod",
 *      "catalogId": 7,
 *      "type": "catalogConfig",
 *      "url": "http://fluid-configure-published.s3.amazonaws.com/prod/prod/customers/c1475/configureHtml/galleries/g_7/configureHtmlGalleryData.js",
 *      "Key": "prod/prod/customers/c1475/configureHtml/galleries/g_7/configureHtmlGalleryData.js",
 *      "Size": 205704
 *    }
 *
 */
var getPublishedFileInformation = require("../s3").getPublishedFileInformation,
  _ = require("lodash"),
  default_options = {
    type: "catalogConfig"
  };

module.exports = function (options, callback) {
  if (!options.catalogId) {
    return callback(new Error("getCatalogConfig requires a valid options.catalogId."));
  }
  getPublishedFileInformation(
    _.defaults({}, options, default_options), {
      Key: options.environment + "/" +
        options.workflow +
        "/customers/c" + options.customerId +
        "/configureHtml/galleries/g_" + options.catalogId +
        "/configureHtmlGalleryData.js"
    },
    callback
  );
};
