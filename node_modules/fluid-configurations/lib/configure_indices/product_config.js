/**
 * Gets the index information for a product configuration published
 * on S3 given the following parameters:
 *
 * - environment
 * - workflow
 * - productId
 * - customerId
 *
 * Example:
 *
 *    getProductConfig({
 *      environment: "prod",
 *      customerId: 1475,
 *      workflow: "prod",
 *      productId: 7
 *    }, function (err, product) {
 *      if (err) {
 *        return console.log(err, err.stack, product);
 *      }
 *      console.log(JSON.stringify(product, null, 2));
 *    });
 *
 * Outputs:
 *
 *    {
 *      "AcceptRanges": "bytes",
 *      "ContentEncoding": "gzip",
 *      "ContentLength": "345432",
 *      "ContentType": "application/javascript; charset=UTF-8",
 *      "ETag": "59f33de1d4f2b8f6334a778257d8abf7",
 *      "LastModified": "Tue, 18 Feb 2014 18:10:21 GMT",
 *      "Metadata": {},
 *      "VersionId": "null",
 *      "environment": "prod",
 *      "customerId": 1475,
 *      "workflow": "prod",
 *      "productId": 20382,
 *      "type": "productConfig",
 *      "url": "http://fluid-configure-published.s3.amazonaws.com/prod/prod/customers/c1475/configureHtml/products/p_20382/configureHtmlProductData.js",
 *      "Key": "prod/prod/customers/c1475/configureHtml/products/p_20382/configureHtmlProductData.js",
 *      "Size": 345432
 *    }
 */
var getPublishedFileInformation = require("../s3").getPublishedFileInformation,
  _ = require("lodash"),
  default_options = {
    type: "productConfig"
  };

module.exports = function (options, callback) {
  getPublishedFileInformation(
    _.defaults({}, options, default_options), {
      Key: options.environment + "/" +
        options.workflow +
        "/customers/c" + options.customerId +
        "/configureHtml/products/p_" + options.productId +
        "/configureHtmlProductData.js"
    },
    callback
  );
};
