/**
 * Sequence of steps required for generating a full graph.
 *
 * We will expose each step independently in order be able to test them.
 */

module.exports = [

  // Pre-requisites
  { name: "loadUtilities", fn: require("./load_utilities") },
  { name: "loadConfigurationStructure", fn: require("./load_configuration_structure") },
  { name: "initGraph", fn: require("./init_graph") },

  // Vertex and Edge extraction

  // ns: p
  { name: "addConfigurableProduct", fn: require("./add_configurable_product") },

  // ca > avs
  { name: "linkCaAvs", fn: require("./link_ca_avs") },

  // ca > sf (sf > sfm, sf > sfs)
  { name: "linkCaSympatheticFilters", fn: require("./link_ca_sympathetic_filters") },

  // ca > ca (relations)
  { name: "linkCaSympatheticRelations", fn: require("./link_ca_sympathetic_relations") },

  // ns: f
  { name: "addFacets", fn: require("./add_facets") },

  // ns: ca
  { name: "addConfigurableAttributes", fn: require("./add_configurable_attributes") },

  // ns: av
  { name: "addAttributeValues", fn: require("./add_attribute_values") },

  // ag > cas
  { name: "linkAttributeGroups", fn: require("./link_attribute_groups") },

  // vs (ca > vr)
  { name: "linkCaVisibilityRules", fn: require("./link_ca_visibility_rules") },

  // vs (vs > avs)
  { name: "addValueSets", fn: require("./add_value_sets") },

  // views (av > vu)
  { name: "linkValueUsages", fn: require("./link_value_usages") },

  // av > uc (upcharges), vu > uc, p.currencies
  { name: "addPricing", fn: require("./add_pricing") },

  // views (ca > view, ag > view, vu > view)
  { name: "linkViews", fn: require("./link_views") },

  // Once all the vertices and edges are in place we will
  // optimize the graph for consumption and network efficiency
  { name: "optimizeGraph", fn: require("./optimize_graph") }
];
