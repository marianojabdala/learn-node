export APP_NAME = fluid-configurations
export REPO_NAME = fluid-configurations

# Settings for this specific Makefile
SHELL = /bin/bash
MAKEFLAGS += --no-print-directory --silent

# Include Fluid build tools
# Sets default server port for local development
_TMPVAR:=$(shell test -d node_modules/fluid-build-tools/ || npm install "git+ssh://git@bitbucket.org/fluidretail/fluid-build-tools.git" --silent --save-dev > /dev/null);
include node_modules/fluid-build-tools/makefiles/NpmMakefile.mk

setup:
	npm_setup

# The default action will lint the code and run all the tests
default: ci

# Lints the code
lint: setup
	grunt jshint

# Removes temporary files
clean:
	rm -rf ./tmp
	rm -rf ./coverage*

# Dev mode for continuous testing
dev: setup
	DEV_MODE=true _TESTFLAGS=--watch make test

# Grunt watcher.
watch:
	grunt watch

# Runs the tests on Node.js
# using the bundled runner
test: setup
	mocha test/$(TESTPATH)$(TESTNAME) $(TESTFLAGS) $(_TESTFLAGS) --require blanket -R mocha-spec-cov

# Runs tests in debug mode
test-debug:
	NODEFLAGS=debug make test

# Runs tests in debug with a remote inspector
test-debug-inspector:
	_TESTFLAGS=--debug-brk make test


# Testem hook executed before running the tests
# after the files have been modified
before-tests: lint

# This make task will be executed before the code is committed
pre-commit: lint

# Continuous Integration Test Runner
ci: before-tests test

# Generates man pages
docs: setup
	grunt markedman


update-matouk-test-fixture-graph: setup clean
	CUSTOMER=1523 PRODUCT=20604 WORKFLOW=qa \
		LOCALE=en_us FIXTURE_NAME=matouk.json \
		make update-individual-test-fixture-graph

update-oakley-test-fixture-graph: setup clean
	CUSTOMER=1479 PRODUCT=20575 WORKFLOW=prod \
		LOCALE=en FIXTURE_NAME=oakley.json \
		make update-individual-test-fixture-graph

update-reebok-test-fixture-graph: setup clean
	CUSTOMER=1475 PRODUCT=20637 WORKFLOW=prod \
		LOCALE=enUS FIXTURE_NAME=reebok.json \
		make update-individual-test-fixture-graph

update-vans-test-fixture-graph: setup clean
	CUSTOMER=758 PRODUCT=20331 WORKFLOW=prod \
		LOCALE=en_us FIXTURE_NAME=vans.json \
		make update-individual-test-fixture-graph

update-mix-and-match-test-fixture-graph: setup clean
	CUSTOMER=1521 PRODUCT=20544 WORKFLOW=dev \
		LOCALE=en_us FIXTURE_NAME=visual-mix-and-match.json \
		make update-individual-test-fixture-graph

update-tnf-test-fixture-graph: setup clean
	CUSTOMER=1443 PRODUCT=20104 WORKFLOW=prod \
		LOCALE=en_us FIXTURE_NAME=tnf.json \
		make update-individual-test-fixture-graph

update-keen-test-fixture-graph: setup clean
	CUSTOMER=1484 PRODUCT=20213 WORKFLOW=prod \
		LOCALE=en_us FIXTURE_NAME=keen.json \
		make update-individual-test-fixture-graph


update-test-fixture-graphs: update-reebok-test-fixture-graph \
	update-mix-and-match-test-fixture-graph update-vans-test-fixture-graph \
	update-oakley-test-fixture-graph update-matouk-test-fixture-graph \
	update-tnf-test-fixture-graph update-keen-test-fixture-graph

define COPY_FIXTURE_GRAPH_SCRIPT
require("fs").writeFileSync("./test/fixtures/graphs/" + process.env.FIXTURE_NAME,
		JSON.stringify(require("./tmp/" + process.env.CONFIG_VERSION +
			"/prod/" + process.env.WORKFLOW + "/" +
			+ process.env.CUSTOMER +
			"/product/" + process.env.PRODUCT +
			"/graph-settings-" + process.env.LOCALE + ".json"), null, 2));
require("fs").writeFileSync("./test/fixtures/products/" + process.env.FIXTURE_NAME,
		JSON.stringify(require("./tmp/" + process.env.CONFIG_VERSION +
			"/prod/" + process.env.WORKFLOW + "/" +
			+ process.env.CUSTOMER +
			"/product/" + process.env.PRODUCT +
			"/settings-" + process.env.LOCALE + ".json"), null, 2));
endef
export COPY_FIXTURE_GRAPH_SCRIPT

update-individual-test-fixture-graph:
	SKIP_TRANSLATION=true \
	fluid-configurations process \
		--force \
		--customers $(CUSTOMER) \
		--products $(PRODUCT) \
		--workflow $(WORKFLOW) --local_dir ./tmp \
		--exclude catalog \
		--processors product --verbose && \
	CONFIG_VERSION=`fluid-configurations --version` \
		node -e "$$COPY_FIXTURE_GRAPH_SCRIPT"


test-coverage-report:
	mocha --require blanket  -R html-cov > coverage.html
	grunt open:coverage

.PHONY: ci clean docs dev lint rebuild setup test watch
