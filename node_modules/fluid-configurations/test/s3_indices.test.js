var expect = require("expect.js"),
  _ = require("lodash"),
  morph = require("morph"),

  // Tests each index under lib/configure_indices/
  configure_indices = [
    "customer_localization",
    "catalog_localization",
    "product_localization",
    "catalog_template",
    "catalog_config",
    "customer_config",
    "product_config"
  ];

// configure_indices = ["product_config"];

describe("Configure S3 Indices", function () {

  configure_indices.forEach(function (name) {

    it("should fetch " + name + " index", function (done) {
      this.timeout(5 * 1000);

      var getIndex = require("../lib/configure_indices/" + name + ".js"),
        fixture = require("./fixtures/" + name + ".json"),
        expectedType = morph.toCamel(name);

      getIndex(fixture.params, function (err, index) {
        if (err) { throw err; }
        var fixtureHits = [],
          isValid;
        // console.log(JSON.stringify(index, null, 2));

        isValid = function (existing) {
          var latest = _.findWhere(index, {Key: existing.Key});
          if (latest) {
            expect(expectedType).to.be(latest.type);
            fixtureHits.push(latest);
            _.each(fixture.expectations.same, function (key) {
              expect(latest[key]).to.be(existing[key]);
            });
            expect(latest).to.have.keys(fixture.expectations.has);
          }
        };

        if (_.isArray(fixture.result)) {
          _.each(fixture.result, isValid);
        } else {
          isValid(fixture.result);
        }

        if (fixtureHits.length) {
          // Have we tested a large enough set?
          expect(fixtureHits.length).to.be.above(fixture.minimumEntries - 1);
        }

        done();
      });
    });
  });

});
